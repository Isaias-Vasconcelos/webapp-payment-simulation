version: "3.9"

services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - services-network
  
  database:
   image: postgres
   container_name: database-log
   restart: always
   environment:
    POSTGRES_PASSWORD: adminlog
    POSTGRES_DB: db_log
   ports:
    - 5432:5432 
   volumes:
    - pgdata:/var/lib/postgresql/data 
   networks:
    - services-network

  process-payment:
   build:
    context: .
    dockerfile: ProcessPayment/Dockerfile
   depends_on:
    rabbitmq:
     condition: service_healthy
   environment:
    - ASPNETCORE_URLS=http://+:80
    - ASPNETCORE_ENVIRONMENT=Development
    - DATABASE_URL=Host=database-log;Port=5432;Username=postgres;Password=adminlog;Database=db_log;
   networks:
    - services-network

  email-payment:
    build:
     context: .
     dockerfile: EmailPayment/Dockerfile
    depends_on:
     rabbitmq:
      condition: service_healthy
    environment:
     - SMTP_SERVER=
     - EMAIL_USER=
     - EMAIL_PASSWORD=
     - DATABASE_URL=Host=database-log;Port=5432;Username=postgres;Password=adminlog;Database=db_log;
    networks:
     - services-network

  status-payment:
    build:
      context: .
      dockerfile: StatusPayment/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "5003:80"
    environment:
      - FRONTEND_URL=http://localhost:5000
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - DATABASE_URL=Host=database-log;Port=5432;Username=postgres;Password=adminlog;Database=db_log;
    networks:
      - services-network

  webrestapi:
    build:
      context: .
      dockerfile: WebRestApi/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - DATABASE_URL=Host=database-log;Port=5432;Username=postgres;Password=adminlog;Database=db_log;
    networks:
      - services-network

  webfrontend:
    build:
      context: .
      dockerfile: WebFrontend/Dockerfile
    depends_on:
      - webrestapi
    ports:
      - "5000:80"
    environment:
      - BACKEND_URL=http://webrestapi
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - DATABASE_URL=Host=database-log;Port=5432;Username=postgres;Password=adminlog;Database=db_log;
    networks:
      - services-network

networks:
  services-network:
    driver: bridge

volumes:
  pgdata:  
