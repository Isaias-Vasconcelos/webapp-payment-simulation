version: "3.9"

services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rabbitmq-network

  process-payment:
    build:
      context: .
      dockerfile: ProcessPayment/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - rabbitmq-network

  status-payment:
    build:
      context: .
      dockerfile: StatusPayment/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "5003:80"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - FRONTEND_URL=http://localhost:5000
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - rabbitmq-network

  webrestapi:
    build:
      context: .
      dockerfile: WebRestApi/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "5001:80"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - rabbitmq-network

  webfrontend:
    build:
      context: .
      dockerfile: WebFrontend/Dockerfile
    depends_on:
      - webrestapi
    ports:
      - "5000:80"
    environment:
      - BACKEND_URL=http://webrestapi
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - rabbitmq-network

networks:
  rabbitmq-network:
    driver: bridge
